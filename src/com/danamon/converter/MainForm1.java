/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.danamon.converter;

import com.toedter.calendar.JTextFieldDateEditor;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.text.SimpleDateFormat;
import javax.swing.JOptionPane;
import org.joda.time.format.DateTimeFormatter;
import org.joda.time.format.DateTimeFormat;
import org.joda.time.LocalDateTime;




/**
 *
 * @author Aris
 * 
 */
public class MainForm1 extends javax.swing.JFrame {
    
    private static FileAndFolder fileConfig = new FileAndFolder();
//    private static Converter convert = new Converter();    
    private static CONVERT convert = new CONVERT();   
   
    
    
    private static SimpleDateFormat format;

    private static String debitAccount;
    private static String descriptionAccount;
    private static String instructionAt="";
    private static String instructionDate="";
    private static String chargeType;
    private static String chargeTo;

    private static String productCode;

    private static Long startTime;

    

    
    public MainForm1() {
        fileConfig.chekConfigFile();
        initComponents();
        
        cmbUploadType.addItem("Inhouse");
        cmbUploadType.addItem("Payroll");
        String uploadType=fileConfig.getBulkUpload();
        if(checkingUploadTypeConfig(uploadType)!=null){
            cmbUploadType.setSelectedItem(checkingUploadTypeConfig(uploadType));
        }else{
            JOptionPane.showMessageDialog(null, "Upload type not match.\n Please set correct upload type in config file.");
            System.exit(1);
        }
        

        /**
         * OUR= REM
         * BEN= BEN
         * */
        cmbChargeTo.addItem("OUR");
        cmbChargeTo.addItem("BEN");
        String chargeToTemp=fileConfig.getChargeTo();
        if (checkingChargeToConfig(chargeToTemp)!=null){
            cmbChargeTo.setSelectedItem(checkingChargeToConfig(chargeToTemp));
        }else{
            JOptionPane.showMessageDialog(null, "Charge To not match.\n Please set correct upload type in config file.");
            System.exit(1);
        }

        cmbChargeType.addItem("Split");
        cmbChargeType.addItem("Combine");
        String chargeTypeTemp=fileConfig.getChargeType();
        if (checkingChargeTypeConfig(chargeTypeTemp)!=null){
            cmbChargeType.setSelectedItem(checkingChargeTypeConfig(chargeTypeTemp));
        }else{
            JOptionPane.showMessageDialog(null, "Charge type not match.\n Please set correct upload type in config file.");
            System.exit(1);
        }
        
        cmbInstructionAt.addItem("0700");
        cmbInstructionAt.addItem("1000");
        cmbInstructionAt.addItem("1300");       
        cmbInstructionAt.addItem("1600");
        cmbInstructionAt.addItem("");
        cmbInstructionAt.setSelectedItem(fileConfig.getIntructionAt());
        
        
        tfDebitAccount.setText(fileConfig.getDebitAccount());
        tfDebitAccount.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                String value = tfDebitAccount.getText();
                int l = value.length();
                if (e.getKeyChar() >= '0' && e.getKeyChar() <= '9' || e.getKeyCode()==8) {
                    tfDebitAccount.setEditable(true);
                } else {
                    tfDebitAccount.setEditable(false);
                }

                if (l<12 || e.getKeyCode()==8){
                    tfDebitAccount.setEditable(true);
                }else{
                    tfDebitAccount.setEditable(false);
                }
            }
        });

        tfAccountDescription.setText(fileConfig.getAccountDesc());
        tfAccountDescription.addKeyListener(new KeyAdapter() {
            @Override
            public void keyPressed(KeyEvent e) {
                String value = tfAccountDescription.getText();
                int l = value.length();
                if (l<=60 || e.getKeyCode()==8){
                    tfAccountDescription.setEditable(true);
                }else{
                    tfAccountDescription.setEditable(false);
                }
            }
        });

        fieldIntrustionDate.setDateFormatString("yyyy/MM/dd");
        JTextFieldDateEditor editor = (JTextFieldDateEditor) fieldIntrustionDate.getDateEditor();
        editor.setEditable(false);
        format = new SimpleDateFormat("yyyyMMdd");
//        delete file
//        convert.deleteFileOut(chekConfig.getFolderOut());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        cmbUploadType = new javax.swing.JComboBox<>();
        tfDebitAccount = new javax.swing.JTextField();
        tfAccountDescription = new javax.swing.JTextField();
        cmbChargeTo = new javax.swing.JComboBox<>();
        cmbChargeType = new javax.swing.JComboBox<>();
        cmbInstructionAt = new javax.swing.JComboBox<>();
        fieldIntrustionDate = new com.toedter.calendar.JDateChooser();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 187, 0));

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jButton1.setText("Convert");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/danamon/res/danamon.jpg"))); // NOI18N

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/com/danamon/res/dcc.png"))); // NOI18N

        jLabel4.setText("Version 4 Oktober 2021");

        jLabel3.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel3.setText("Converter for CAW Auto Credit/Payroll to DCC");

        jLabel5.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jLabel5.setText("Please put the CAW file into input folder, the result will be generated in output folder");

        jLabel6.setText("Upload Type :");

        jLabel7.setText("Debit Acount :");

        jLabel8.setText("From Account Description :");

        jLabel9.setText("Charge To :");

        jLabel10.setText("Charge Type :");

        jLabel11.setText("Instruction Date (Optional) :");

        jLabel12.setText("Instruction AT (Optional) :");

        cmbUploadType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbUploadTypeActionPerformed(evt);
            }
        });

        tfDebitAccount.setText("jTextField1");

        tfAccountDescription.setText("jTextField2");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                        .addGap(26, 26, 26)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(jLabel7))
                                .addGap(93, 93, 93)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(tfDebitAccount)
                                    .addComponent(cmbUploadType, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel8)
                                .addGap(18, 18, 18)
                                .addComponent(tfAccountDescription))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel12)
                                .addGap(30, 30, 30)
                                .addComponent(cmbInstructionAt, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel11)
                                        .addGap(18, 18, 18)
                                        .addComponent(fieldIntrustionDate, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(jLabel9)
                                            .addComponent(jLabel10))
                                        .addGap(94, 94, 94)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(cmbChargeType, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(cmbChargeTo, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 252, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLabel3)
                        .addGap(116, 116, 116)))
                .addGap(27, 27, 27))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(218, 218, 218)
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(268, 268, 268)
                        .addComponent(jLabel4))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(72, 72, 72)
                        .addComponent(jLabel5)))
                .addContainerGap(85, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(24, 24, 24)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(cmbUploadType))
                .addGap(9, 9, 9)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(tfDebitAccount, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(tfAccountDescription, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(cmbChargeTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(cmbChargeType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel11)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel12)
                            .addComponent(cmbInstructionAt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(37, 37, 37)
                        .addComponent(jButton1))
                    .addComponent(fieldIntrustionDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(33, 33, 33))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
       jButton1.setEnabled(false);
//        if (chekConfig.checkFolder()) {
//            System.out.println("Start");
//            convert.convertFsdSuzuki(chekConfig.getFolderIn(), chekConfig.getFolderOut());
//        }

                 boolean status = true;
                debitAccount= tfDebitAccount.getText();
                if (debitAccount.equals("")){
                    status= false;
                    JOptionPane.showMessageDialog(null, "Please fill debit account");
                }
                descriptionAccount= tfAccountDescription.getText();
                instructionAt = (String) cmbInstructionAt.getSelectedItem();
                if(fieldIntrustionDate.getDate()!=null) {
                    DateTimeFormatter dtf = DateTimeFormat.forPattern("yyyyMMdd");
                    DateTimeFormatter dtfTime= DateTimeFormat.forPattern("HHmm");
                    LocalDateTime now = LocalDateTime.now();
                    String timeNow= now.toString(dtfTime);
                    if (format.format(fieldIntrustionDate.getDate()).compareTo(now.toString(dtf))==0){
                        if (timeNow.compareTo(instructionAt)>0){
                            status= false;
                            JOptionPane.showMessageDialog(jPanel1, "Instruction At (set in configuration file) has been passed");
                        }
                    }
                    if (format.format(fieldIntrustionDate.getDate()).compareTo(now.toString(dtf))<0){
                        status= false;
                        JOptionPane.showMessageDialog(jPanel1, "Instruction Date must be empty or equal or greater than today.");
                    }
                    instructionDate = format.format(fieldIntrustionDate.getDate());
                }else{
                    instructionAt="";
                }

                productCode= convertUploadType(cmbUploadType.getSelectedItem());

                chargeType= convertChargeType(cmbChargeType.getSelectedItem());

                chargeTo= convertChargeTo(cmbChargeTo.getSelectedItem());
//                        System.out.println("65765757");

                if (status) {
                     System.out.println("Start");
                convert.convertAutoCredit(fileConfig.getFolderIn(), fileConfig.getFolderOut(),debitAccount,descriptionAccount,chargeTo,chargeType,productCode,instructionDate,instructionAt);
                }
                
        jButton1.setEnabled(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void cmbUploadTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbUploadTypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbUploadTypeActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainForm1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainForm1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainForm1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainForm1.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MainForm1().setVisible(true);
            }
        });
    }


    
   
 
    
  private static String checkingChargeTypeConfig(String property) {
    if (property.equals("S"))
      return "Split"; 
    if (property.equals("C"))
      return "Combine"; 
    return null;
  }
  
  private static String checkingUploadTypeConfig(String property) {
    if (property.equals("HAC"))
      return "Inhouse"; 
    if (property.equals("HYR"))
      return "Payroll"; 
    return null;
  }
  
  private static String checkingChargeToConfig(String property) {
    if (property.equals("OUR"))
      return "REM"; 
    if (property.equals("BEN"))
      return "BEN"; 
    return null;
  }
  
  private static String convertChargeTo(Object selectedItem) {
    if (selectedItem.equals("OUR"))
      return "REM"; 
    return "BEN";
  }
  
  private static String convertChargeType(Object selectedItem) {
    if (selectedItem.equals("Split"))
      return "S"; 
    return "C";
  }
  
  private static String convertUploadType(Object selectedItem) {
    if (selectedItem.equals("Inhouse"))
      return "HAC"; 
    return "HYR";
  }
  
    
    

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> cmbChargeTo;
    private javax.swing.JComboBox<String> cmbChargeType;
    private javax.swing.JComboBox<String> cmbInstructionAt;
    private javax.swing.JComboBox<String> cmbUploadType;
    private com.toedter.calendar.JDateChooser fieldIntrustionDate;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JTextField tfAccountDescription;
    private javax.swing.JTextField tfDebitAccount;
    // End of variables declaration//GEN-END:variables
}
